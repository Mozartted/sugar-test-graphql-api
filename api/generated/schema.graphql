### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Apartment {
  doors(after: DoorWhereUniqueInput, before: DoorWhereUniqueInput, first: Int, last: Int): [Door!]!
  id: String!
  name: String!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input ApartmentUploadInput {
  apartment_name: String!
  doors_upload: Upload
  residents_upload: Upload
}

type AuthPayload {
  token: String
  user: User
}

type Door {
  acme_id: String!
  id: String!
  name: String!
  residents(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum DoorStatusEnum {
  LOCKED
  UNLOCKED
}

input DoorWhereUniqueInput {
  acme_id: String
  id: String
}

type File {
  encoding: String
  filename: String
  id: ID
  mimetype: String
  path: String
}

enum LockInputEnum {
  LOCK
  UNLOCK
}

input LoginInput {
  email: String!
}

input ManageDoorInput {
  door_id: String
  door_status: LockInputEnum! = LOCK
}

type Mutation {
  login(input: LoginInput!): AuthPayload
  manageDoor(input: ManageDoorInput!): Door
  uploadResidents(input: ApartmentUploadInput!): Apartment
}

type MyAccess {
  doors: [OnlineDoor]
  me: User
}

type OnlineDoor {
  """Acme of the door"""
  acme_id: String

  """ID of the door"""
  id: String

  """Name of the door"""
  name: String
  status: DoorStatusEnum
}

type Query {
  apartments: [Apartment]
  my_access: MyAccess
  residents: [User]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  doors(after: DoorWhereUniqueInput, before: DoorWhereUniqueInput, first: Int, last: Int): [Door!]!
  email: String!
  first_name: String!
  id: String!
  last_name: String!
}

input UserWhereUniqueInput {
  email: String
  id: String
}
